<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="groupBox1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label3.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="toolTipMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>19, 57</value>
  </metadata>
  <metadata name="label3.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label2.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label2.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="groupBox2.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label7.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label7.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="toolTipMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>19, 57</value>
  </metadata>
  <data name="label7.ToolTip" xml:space="preserve">
    <value>The path of the file where to write the certificate signing request to.
After generating it, send this file to your project's signer.
They will produce the signed certificate, which is combined with your intermediate key in Step 3.
NOTE: ONLY SEND THIS FILE, DON'T SEND YOUR (Intermediate) KEY FILE TO ANYONE ELSE!</value>
  </data>
  <data name="chkGenerateSigner.ToolTip" xml:space="preserve">
    <value>Generate a signer certificate request (and key) instead of a normal recipient certificate request (and key).
The signer certificate is used to sign recipient certificates and is used to verify them.
Only check this, if you know you need to generate a signer certififcate.</value>
  </data>
  <metadata name="label4.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label5.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label6.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label8.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label14.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="saveIntermediateKeyFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="saveCsrFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>236, 17</value>
  </metadata>
  <metadata name="openCsrInputFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>383, 17</value>
  </metadata>
  <metadata name="openSignerCertFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>552, 18</value>
  </metadata>
  <metadata name="openSignerKeyFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>742, 19</value>
  </metadata>
  <metadata name="saveCertFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>928, 21</value>
  </metadata>
  <metadata name="openIntermediateKeyFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>140, 59</value>
  </metadata>
  <metadata name="openCertFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>363, 59</value>
  </metadata>
  <metadata name="saveKeyFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>519, 59</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>90</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>